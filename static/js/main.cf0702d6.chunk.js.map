{"version":3,"sources":["components/Navbar.js","components/Form.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","Form","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","background","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","about","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oMAGe,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACA,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SACGH,EAAMI,QAET,yBACEH,UAAU,iBACVI,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SAQE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,oBAAIL,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,sBAqBJ,sBAAKF,UAAS,sCAA8C,UAAbD,EAAME,KAAgB,OAAO,SAA5E,UACE,uBAAOD,UAAU,mBAAmBI,KAAK,WAAWE,QAASP,EAAMQ,WAAYF,GAAG,2BAClF,uBAAOL,UAAU,mBAAmBQ,QAAQ,yBAA5C,wCC5CC,SAASC,EAAKV,GACzB,IAiCA,EAAwBW,mBAAS,IAAjC,mBAAOC,EAAP,KAAYC,EAAZ,KAEA,OACI,gCACI,sBAAKZ,UAAU,YAAYa,MAAO,CAACC,MAAmB,SAAbf,EAAME,KAAe,QAAQ,WAAtE,UACI,6BAAKF,EAAMgB,UACX,qBAAKf,UAAU,OAAf,SACI,0BAAUA,UAAU,eAAegB,MAAOL,EAAMM,SAtBzC,SAACC,GACpBC,QAAQC,IAAI,uBACZR,EAASM,EAAMG,OAAOL,QAoBgEH,MAAO,CAACS,WAAwB,SAAbvB,EAAME,KAAe,OAAO,QAAUa,MAAmB,SAAbf,EAAME,KAAe,QAAQ,WAAYI,GAAG,QAAQkB,KAAK,QAEtM,wBAAQvB,UAAU,+BAA+BM,QA1CvC,WAClBa,QAAQC,IAAI,sBAAwBT,GACpC,IAAIa,EAAUb,EAAKc,cACnBb,EAASY,GACTzB,EAAM2B,UAAU,0BAA0B,YAsClC,kCACA,wBAAQ1B,UAAU,0BAA0BM,QArClC,WAClBa,QAAQC,IAAI,sBAAwBT,GACpC,IAAIa,EAAUb,EAAKgB,cACnBf,EAASY,GACTzB,EAAM2B,UAAU,0BAA0B,YAiClC,kCACA,wBAAQ1B,UAAU,+BAA+BM,QAhCpC,WACrBa,QAAQC,IAAI,uBAAyBT,GAErCC,EADc,IAEdb,EAAM2B,UAAU,gBAAgB,YA4BxB,wBACA,wBAAQ1B,UAAU,+BAA+BM,QAvB3C,WACd,IAAIK,EAAOiB,SAASC,eAAe,SACnClB,EAAKmB,SACLC,UAAUC,UAAUC,UAAUtB,EAAKK,OACnCjB,EAAM2B,UAAU,uBAAuB,YAmB/B,uBACA,wBAAQ1B,UAAU,+BAA+BM,QAlBnC,WACtB,IAAIkB,EAAUb,EAAKuB,MAAM,QACzBtB,EAAQY,EAAQW,KAAK,MACrBpC,EAAM2B,UAAU,wBAAwB,YAehC,oCAEJ,sBAAK1B,UAAU,iBAAiBa,MAAO,CAACC,MAAmB,SAAbf,EAAME,KAAe,QAAQ,WAA3E,UACI,mDACA,8BAAIU,EAAKuB,MAAM,KAAKE,OAApB,cAAuCzB,EAAKyB,OAA5C,iBACA,8BAAI,KAAQzB,EAAKuB,MAAM,KAAKE,OAA5B,2BACA,yCACA,4BAAIzB,EAAKyB,OAAO,EAAEzB,EAAK,kEC1CxB0B,MAZf,SAAetC,GAKX,OACIA,EAAMuC,OAAS,sBAAKtC,UAAS,sBAAiBD,EAAMuC,MAAMlC,KAA7B,gCAAiEmC,KAAK,QAApF,UACX,iCANW,SAACC,GAChB,IAAMC,EAAQD,EAAKb,cACnB,OAAOc,EAAMC,OAAO,GAAGjB,cAAgBgB,EAAME,MAAM,GAItCC,CAAW7C,EAAMuC,MAAMlC,QADrB,KACuCL,EAAMuC,MAAMO,QCsD3DC,MA/Cf,WACE,MAAwBpC,mBAAS,SAAjC,mBAAOT,EAAP,KAAa8C,EAAb,KACA,EAA0BrC,mBAAS,MAAnC,mBAAO4B,EAAP,KAAcU,EAAd,KACMtB,EAAY,SAACuB,EAAS7C,GAC1B4C,EAAS,CACPH,IAAKI,EACL7C,KAAKA,IAEP8C,YAAW,WACTF,EAAS,QACR,OAiBL,OACE,qCAEI,cAAClD,EAAD,CAAQK,MAAM,YAAYgD,MAAM,kBAAkBlD,KAAMA,EAAMM,WAjBjD,WACL,UAATN,GACD8C,EAAS,QACTnB,SAASwB,KAAKvC,MAAMS,WAAa,UACjCI,EAAU,6BAA6B,WACvCE,SAASzB,MAAQ,0BAGjB4C,EAAS,SACTnB,SAASwB,KAAKvC,MAAMS,WAAa,QACjCI,EAAU,8BAA8B,WACxCE,SAASzB,MAAQ,6BAOf,cAAC,EAAD,CAAOmC,MAAOA,IACd,qBAAKtC,UAAU,iBAAf,SAMM,cAACS,EAAD,CAAMiB,UAAYA,EAAWX,QAAQ,mBAAmBd,KAAMA,UC1C7DoD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASC,eAAe,SAM1BwB,K","file":"static/js/main.cf0702d6.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes  from 'prop-types';\n// import { Link } from 'react-router-dom';\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}` }>\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"#\">\n            {props.title}\n          </a>\n          <buttony\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </buttony>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                  Home\n                </a>\n              </li>\n              {/* <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/about\">\n                  {props.about}\n                </Link>\n              </li> */}\n            </ul>\n            {/* <form className=\"d-flex\">\n              <input\n                className=\"form-control me-2\"\n                type=\"search\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n              />\n              <button className=\"btn btn-outline-success\" type=\"submit\">\n                Search\n              </button>\n            </form> */}\n            <div className={`form-check form-switch text-${props.mode==='light'? 'dark':'light'}`}>\n              <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\n            </div>\n          </div>\n        </div>\n      </nav>\n      \n    )\n}\nNavbar.propTypes = {title: PropTypes.string , about: PropTypes.string}","import React, {useState} from 'react';\n\nexport default function Form(props) {\n    const handleupclick = ()=>{\n        console.log('Uppercase Was Click' + text );\n        let newText = text.toUpperCase();\n        setText (newText)\n        props.showAlert(\"Converted to uppercase!\",'success');\n    }\n    const handleloclick = ()=>{\n        console.log('Lowercase Was Click' + text );\n        let newText = text.toLowerCase();\n        setText (newText)\n        props.showAlert(\"Converted to lowercase!\",'success');\n    }\n    const handleClearclick = ()=>{\n        console.log('Clear Text Was Click' + text );\n        let newText = '';\n        setText (newText)\n        props.showAlert(\"Text Cleared!\",'success');\n    }  \n    const handleonchange = (event)=>{\n        console.log('Uppercase Was Click');\n        setText (event.target.value);\n    }\n    const handleCopy =()=>{\n        var text = document.getElementById('myBox');\n        text.select();\n        navigator.clipboard.writeText(text.value);\n        props.showAlert(\"Copied to Clipboard!\",'success');\n    }\n    const handleExtraSpaces = () =>{\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Extra spaces removed!\",'success');\n    }\n    const [text,setText ] = useState('');  \n\n    return (\n        <div>\n            <div className=\"container\" style={{color:props.mode==='dark'? 'white':'#042743'}} >\n                <h1>{props.heading}</h1>\n                <div className=\"mb-3\"> \n                    <textarea className=\"form-control\" value={text} onChange={handleonchange} style={{background:props.mode==='dark'? 'grey':'white' , color:props.mode==='dark'? 'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\n                </div>\n                <button className=\"btn btn-outline-primary mx-2\" onClick={handleupclick}>Convert To Uppercase</button>\n                <button className=\"btn btn-outline-primary\" onClick={handleloclick}>Convert To Lowercase</button>\n                <button className=\"btn btn-outline-primary mx-2\" onClick={handleClearclick}>Clear Text</button>\n                <button className=\"btn btn-outline-primary mx-2\" onClick={handleCopy}>Copy Text</button>\n                <button className=\"btn btn-outline-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n            </div>\n            <div className=\"container my-3\" style={{color:props.mode==='dark'? 'white':'#042743'}}>\n                <h2>Your Text Summary</h2>\n                <p>{text.split(\" \").length} Words and {text.length} Characters</p>\n                <p>{0.008 * text.split(\" \").length}Minutes Time To Read </p>\n                <h2>Preview</h2>\n                <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize = (word) =>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\n            </div>\n    )\n}\n\nexport default Alert\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";  \nimport Form from \"./components/Form\";  \n// import About from \"./components/About\";\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null)\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () =>{\n    if(mode === 'light'){\n      setMode ('dark');\n      document.body.style.background = '#042743';\n      showAlert('Dark mode has been enabled','success');\n      document.title = 'TextUtils - Dark Mode'\n    }\n    else{\n      setMode ('light');\n      document.body.style.background = 'white';\n      showAlert('Light mode has been enabled','success');\n      document.title = 'TextUtils - Light Mode'\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" about=\"About TextUtils\" mode={mode} toggleMode = {toggleMode}/>\n        <Alert alert={alert}/>\n        <div className=\"container my-3\">\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About/>\n            </Route>\n            <Route exact path=\"/\"> */}\n              <Form showAlert ={showAlert} heading=\"Enter Text Below\" mode={mode}/>\n            {/* </Route>\n          </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}